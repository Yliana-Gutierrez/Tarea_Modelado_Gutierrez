// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Tarea_Modelado_Gutierrez.Entidades;

#nullable disable

namespace Tarea_Modelado_Gutierrez.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Tarea_Modelado_Gutierrez.Entidades.Autor", b =>
                {
                    b.Property<int>("AutorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AutorId"));

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nacionalidad")
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .HasColumnType("text");

                    b.HasKey("AutorId");

                    b.ToTable("Autores");
                });

            modelBuilder.Entity("Tarea_Modelado_Gutierrez.Entidades.Categoria", b =>
                {
                    b.Property<int>("CategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CategoriaId"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.HasKey("CategoriaId");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("Tarea_Modelado_Gutierrez.Entidades.Libro", b =>
                {
                    b.Property<int>("LibroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("LibroId"));

                    b.Property<int>("AñoPublicacion")
                        .HasColumnType("integer");

                    b.Property<int>("EjemplaresDisponibles")
                        .HasColumnType("integer");

                    b.Property<string>("ISBN")
                        .HasColumnType("text");

                    b.Property<string>("Titulo")
                        .HasColumnType("text");

                    b.HasKey("LibroId");

                    b.ToTable("Libros");
                });

            modelBuilder.Entity("Tarea_Modelado_Gutierrez.Entidades.LibroAutor", b =>
                {
                    b.Property<int>("LibroId")
                        .HasColumnType("integer");

                    b.Property<int>("AutorId")
                        .HasColumnType("integer");

                    b.HasKey("LibroId", "AutorId");

                    b.HasIndex("AutorId");

                    b.ToTable("LibroAutores");
                });

            modelBuilder.Entity("Tarea_Modelado_Gutierrez.Entidades.LibroCategoria", b =>
                {
                    b.Property<int>("LibroId")
                        .HasColumnType("integer");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("integer");

                    b.HasKey("LibroId", "CategoriaId");

                    b.HasIndex("CategoriaId");

                    b.ToTable("LibroCategorias");
                });

            modelBuilder.Entity("Tarea_Modelado_Gutierrez.Entidades.Prestamo", b =>
                {
                    b.Property<int>("PrestamoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PrestamoId"));

                    b.Property<DateTime>("FechaDevolucion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("FechaDevolucionReal")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaPrestamo")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("LibroId")
                        .HasColumnType("integer");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("PrestamoId");

                    b.HasIndex("LibroId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Prestamos");
                });

            modelBuilder.Entity("Tarea_Modelado_Gutierrez.Entidades.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UsuarioId"));

                    b.Property<string>("Direccion")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .HasColumnType("text");

                    b.Property<string>("Telefono")
                        .HasColumnType("text");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Tarea_Modelado_Gutierrez.Entidades.LibroAutor", b =>
                {
                    b.HasOne("Tarea_Modelado_Gutierrez.Entidades.Autor", "Autor")
                        .WithMany("Libros")
                        .HasForeignKey("AutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tarea_Modelado_Gutierrez.Entidades.Libro", "Libro")
                        .WithMany("Autores")
                        .HasForeignKey("LibroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Autor");

                    b.Navigation("Libro");
                });

            modelBuilder.Entity("Tarea_Modelado_Gutierrez.Entidades.LibroCategoria", b =>
                {
                    b.HasOne("Tarea_Modelado_Gutierrez.Entidades.Categoria", "Categoria")
                        .WithMany("Libros")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tarea_Modelado_Gutierrez.Entidades.Libro", "Libro")
                        .WithMany("Categorias")
                        .HasForeignKey("LibroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Libro");
                });

            modelBuilder.Entity("Tarea_Modelado_Gutierrez.Entidades.Prestamo", b =>
                {
                    b.HasOne("Tarea_Modelado_Gutierrez.Entidades.Libro", "Libro")
                        .WithMany("Prestamos")
                        .HasForeignKey("LibroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tarea_Modelado_Gutierrez.Entidades.Usuario", "Usuario")
                        .WithMany("Prestamos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Libro");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Tarea_Modelado_Gutierrez.Entidades.Autor", b =>
                {
                    b.Navigation("Libros");
                });

            modelBuilder.Entity("Tarea_Modelado_Gutierrez.Entidades.Categoria", b =>
                {
                    b.Navigation("Libros");
                });

            modelBuilder.Entity("Tarea_Modelado_Gutierrez.Entidades.Libro", b =>
                {
                    b.Navigation("Autores");

                    b.Navigation("Categorias");

                    b.Navigation("Prestamos");
                });

            modelBuilder.Entity("Tarea_Modelado_Gutierrez.Entidades.Usuario", b =>
                {
                    b.Navigation("Prestamos");
                });
#pragma warning restore 612, 618
        }
    }
}
